<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[你给公司创造了多少价值]]></title>
    <url>%2F2018%2F01%2F09%2F%E4%BD%A0%E7%BB%99%E5%85%AC%E5%8F%B8%E5%88%9B%E9%80%A0%E4%BA%86%E5%A4%9A%E5%B0%91%E4%BB%B7%E5%80%BC%2F</url>
    <content type="text"><![CDATA[Tips: 这是博主几年前写的，记录当时自己的一些感想 公司每年有两次晋升机会，年中年末。 这次，我向leader申请晋升机会，今天leader叫我去会议室聊聊。 开始问我你觉得你给团队带来了哪些帮助？ 有没有因为你提高了整个团队的效率？ 我完成了几个项目的主流程自动化的覆盖，达到了持续集成的目的。我写过一个工具，用来同步hudson的配置数据，保持应用服务器的配置和hudson服务器的配置一致，节省了因为配置不一致进行问题排查所花费的时间，提高了整个团队的工作效率。 还问了一些其他的问题，就不一一叙述了。 最后，leader问我，你觉得你给公司创造了多少价值，给公司的未来创造了多少价值？ 这个问题把我问倒了，我不知道怎么回答，不知道从哪些方面来回答，只觉得这个问题好抽象，我笑笑说，这个我还真没认真想过，说不出具体的点点面面来。 leader说，这个你好好想想，我不会告诉你答案，这个问题还没有答案。不过公司的晋升评审时，评委们都是以这个问题为导线而展开的。 有人肯定会说，只要你在这个公司做，只要公司在盈利，你创造的价值肯定大于你所获得的价值。 但是，有没有一个大概的值呢？怎样去估算这个值呢？可以从哪些方面来一点一点的细化你所创造的价值呢？ 大家一起去思考吧，也希望大家可以一起交流、学习。]]></content>
      <categories>
        <category>测试人生</category>
      </categories>
      <tags>
        <tag>测试感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何看待开发的随意变更模块功能]]></title>
    <url>%2F2018%2F01%2F08%2F%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E5%BC%80%E5%8F%91%E7%9A%84%E9%9A%8F%E6%84%8F%E5%8F%98%E6%9B%B4%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[这几天也有在51testing上浏览一些文章，关于开发和测试之间的关系的文章，非常的多。 大部分比例的观点都会描述开发和测试之间存在居多的问题，比如开发认为测试爱找茬，喜欢钻牛角尖，测试认为开发不懂测试，质量意识不强，等等。 今天，在工作中，我经历了一件事情。项目即将发布了，开发对一个模块某个功能的实现换了别的逻辑，而这个变动作为这个项目的测试负责人的我是透明的，我不知道开发改变了这个逻辑。但幸好在项目冒烟测试阶段，我就编写了所有模块的主流程的自动化脚本，并进行每天的回归测试。在今天发现部分脚本执行失败，排查原因发现变更了逻辑的地方脚本报错了，于是和开发确认后，是变更逻辑所致。 后来我又排查了另外几个失败的脚本，发现又有一个文本输入限制的逻辑也变更了。 对于这种情况，我觉得对于开发来说，功能的变更太随便了，在他们的意识里没有完整的质量意识，认为自己变更的只是一个小功能，没有必要知会测试。但是，往往是开发的这种习惯，最后却导致线上的故障。 对于开发的这种习惯，也有几个相应的措施来监控，一个就是监控他们每次提交的代码，二个就是通过自动化脚本进行持续集成，不断的校验系统各模块的功能。当然，也幸好有后者，让我发现了这个问题的所在。 在这里，虽然问题在发布前被发现，但我们想想，如果我们没有这个条件，在已经测试好几轮后，开发又偷偷改动了其他的功能，悲剧迟早会发生的。 思考再三，我觉得自己还是唱个黑脸，在项目交流群里，把这几个问题抛出来，并表明我的观点：在即将发布前，开发随意的变更功能，不知会测试，这样的项目质量让测试如何有信心来保证。 开发也抛出了自己的观点，说这都是一些小的功能，没有必要事事都告知测试吧，觉得我是在钻牛角尖。但我觉得，这不单单仅仅是功能大小的问题，而是一种意识，一种习惯。即使我也觉得这几个小变更确实不会对系统造成大的影响，但是，我很害怕开发的这种习惯，或许哪天，因为这种情况，人算不如天算，在发布后因为小功能导致重大问题，这种情况不是没可能，我情愿做个悲观者。 对于开发来说，测试有责任去杜绝开发的这种习惯，去培养他们良好的质量意识，现在很流行的缺陷预防，我想，如果开发也有良好的质量意识，未尝不是在进行有效的缺陷预防。]]></content>
      <categories>
        <category>测试人生</category>
      </categories>
      <tags>
        <tag>测试感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[每周美图(一)]]></title>
    <url>%2F2018%2F01%2F07%2Fphono%2F</url>
    <content type="text"></content>
      <categories>
        <category>美图</category>
      </categories>
      <tags>
        <tag>欧美</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkDownPad 2实用教程]]></title>
    <url>%2F2018%2F01%2F06%2FMarkDownPad%202%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[MarkDownPad 2实用教程 前言： MarkdownPad 是一款免费的将文本转换成HTML/XHTML的网页格式的小软件，操作简单容易，上手很快，可让你可以即时预览转换后的样式的同时，又不会加入Office特有的编版码，有需要朋友可以进行尝试。 背景 网上关于MarkDownPad2的资料既少又零散，笔者在踩了很多坑之后，决定写一篇完善的文章，将大多数新手可能需要的信息整理到一起，少走弯路。 本文共分几个部分来进行展开： 下载安装 中文汉化、破解 语法介绍 高级玩法 1. 下载安装1.1 下载 Tips：MarkDownPad2是一款国外收费软件，有钱任性的可以buy 官网地址MarkDownPad2，可以取官网了解下MarkDownPad2一些介绍之类，我们就不在这绕弯子了，直接进入主题：选择下载安装破解版，并进行汉化。 笔者是在这里下载的：http://www.pc6.com/softview/SoftView_73153.html 如不能破解，请联系我获取～ 1.2 安装 跟安装其他Windows软件一样，不具体介绍了 1.3 中文汉化 打开软件，点击Tools 点击Options 修改语言为中文并重启应用程序即可 1.4 破解 解压下载下来的包，然后解压Pa_ttrar.rar这个包 运行包中的Pa_ttrar.exe文件 点击path,然后点击是 选择这个包软件的程序包中的MarkdownPad2.exe.config文件 点击打开，运行后关闭程序 这样就可以了，现在你打开程序就可以看到的就是中文破解版的了 2. 语法介绍 有了上面的配置，我们就可以开始markdown之旅了，但是没有语法，就没有漂亮的排版。 2.1 标题 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 2.2 列表A.无序列表 语法很简单，在文字前加上 - 或 * 即可。 - 我是第一行 - 我是第二行 * 我是第三行 * 我是第四行 Tips：- * 等符号要和文字之间加上一个字符的空格！ B.有序列表 直接在文字前加1. 2. 3. 符号1.我是第一行2.我是第二行3.我是第三行 2.3 引用 需要在文本前加入 &gt; 这种尖括号（大于号）即可 > 我一直在使用引用。 > 从开始到现在。 Tips： &gt;符号要和文字之间加上一个字符的空格！而且是在英文输入法的条件下输入！ 2.4 图片和链接 图片与链接 插入链接与插入图片的语法很像，区别在一个 !号 图片为：![]() 举例：![美女矢量素材](https://i.imgur.com/lPKrI8e.png) 链接为：[]() 举例：[美女矢量素材](https://i.imgur.com/lPKrI8e.png) 图片举例： 链接举例：美女矢量素材 2.5 粗体与斜体 Markdown 的粗体和斜体也非常简单，用两个 包含一段文本就是粗体的语法，用一个 包含一段文本就是斜体的语法。 例如：这里是粗体 这里是斜体 粗体 举例：**粗体** 斜体 举例：*斜体* 2.6 表格 说明：|表头1|表头2|表头3||:—-|:—-:|—-:||居左|居中|居右| 举例： | Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | 效果如下： Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 示例表格转换成html代码就是这样1234567891011121314151617181920212223242526&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Tables&lt;/th&gt; &lt;th style="text-align:center"&gt;Are&lt;/th&gt; &lt;th style="text-align:right"&gt;Cool&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;col 3 is&lt;/td&gt; &lt;td style="text-align:center"&gt;right-aligned&lt;/td&gt; &lt;td style="text-align:right"&gt;$1600&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;col 2 is&lt;/td&gt; &lt;td style="text-align:center"&gt;centered&lt;/td&gt; &lt;td style="text-align:right"&gt;$12&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;zebra stripes&lt;/td&gt; &lt;td style="text-align:center"&gt;are neat&lt;/td&gt; &lt;td style="text-align:right"&gt;$1&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 2.7 代码框 连续三个反引号`，就是按键1前面的那个符号再加代码类型. 1234567891011121314package com.hkteam.hk.ui;import com.hkteam.hk.R;import android.os.Bundle;public class AboutHkActivity extends BaseActivity&#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_about_hk); &#125;&#125; 效果如下： package com.hkteam.hk.ui; import com.hkteam.hk.R; import android.os.Bundle; public class AboutHkActivity extends BaseActivity{ @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_about_hk); } } 2.8 横线 分割线的语法只需要三个 * 号。 2.9 转义字符 \\ 反斜杠 \` 反引号 \* 星号 \_ 下划线 \{} 大括号 \[] 中括号 \() 小括号 \# 井号 \+ 加号 \- 减号 \. 英文句号 \! 感叹号 效果如下： \ 反斜杠` 反引号* 星号_ 下划线{} 大括号[] 中括号() 小括号# 井号+ 加号- 减号. 英文句号! 感叹号 2.10 快捷键MarkdownPad 2 常用快捷键 Ctrl + I ： 斜体 Ctrl + B ： 粗体 Ctrl + G ： 图片 Ctrl + Q ： 引用 Ctrl + 1 ： 标题 1 Ctrl + 2 ： 标题 2 Ctrl + 3 ： 标题 3 Ctrl + K ： 代码块 Ctrl + L ： 超链接 Ctrl + T ： 时间戳 Ctrl + U ： 无序列表 Ctrl + R ： 水平标尺 F4 ： 启用水平布局 F5 ： 启用实时预览 F6 ： 在浏览器中预览 Ctrl + Shift + O ： 有序列表 MarkDownPad 2的语法介绍完了，我们可以记住这些语法的使用方法。对于新手来说，多多练习就能完全掌握，也可以鼠标点击工具栏上的图标来帮助你完成写作；对于高手来说，键盘操作才是黑科技，那么记住这些快捷键是基本功。 3. 高级玩法3.1 代码高亮MarkDownPad 2 默认不会对代码块进行着色，要达到酷炫的代码高亮的效果，需要进行一些配置。 进入markdownpad2》高级》工具》选项》高级》HTMLHead编辑器将如下代码粘贴进去 123&lt;link rel="stylesheet" href="https://cdn.bootcss.com/highlight.js/8.0/styles/solarized_dark.min.css"&gt;&lt;script src="https://cdn.bootcss.com/highlight.js/8.0/highlight.min.js"&gt;&lt;/script&gt;&lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt; 在编辑器中敲击代码在按F6在浏览器中打开，可看到代码高亮了 3.2 自定义样式表MarkDownPad 2内置的样式表有：markdown.css 、none.css 、markdownpad-github.css、solarized-dark.css 、solarized-light.css 选择“工具——选项——样式表”可以看到样式表的设置界面 或“按F7——样式表”，如下图 上面列出的5种样式表，你都可以对它们进行编辑，修改为你想要的样式也可以自定义添加样式表 Tips：要修改样式表或自定义添加样式表，前提条件：学过html、css，具备修改css的能力 3.3 快速高效的写出漂亮的API接口文档 希望达到以下效果： 例子完整内容1234567891011121314151617181920212223242526272829303132333435363738394041424344## 得到博客文章的列表（有分页） ## ### 接口地址 ###&lt;pre&gt; http://www.dodobook.net/post/list &lt;/pre&gt; ### 传递参数 ###&lt;pre&gt;cate_id 分类ID Array（不传显示全部） [1,3,6]page_num 当前页码（可不传） 默认 1page_size 每页记录数目（可不填） 默认 10&lt;/pre&gt; ### 返回值 ###&lt;pre style="background:#222;color:#35b558"&gt;total: 108,list: [ &#123; id: 2718, cate_id: 2, cate_name: "php", view_cnt: "1005", cate_name: "php", name: "Yii2中配置使用连接多个数据库连接", url: "http://www.dodobook.net/php/2718", post_date: "2016-08-20 20:10:08", img_logo: "/upload/img/aaa.png", &#125;, &#123; id: 2718, cate_id: 2, cate_name: "php", view_cnt: "1005", cate_name: "php", name: "PHP实现网址短链接转换的方法", url: "http://www.dodobook.net/php/2710", post_date: "2016-08-16 20:10:08", img_logo: "/upload/img/addsaafff.png", &#125;]&lt;/pre&gt; 高级玩法还有很多，更多的功能等待着大家去摸索去发现…… 4. 总结支持MarkDown语法写作的工具很多，还有很多支持在线编辑MarkDown语法的网站，选择一款适合自己的工具即可，好用高效才是王道!!!!!!]]></content>
      <categories>
        <category>写作</category>
      </categories>
      <tags>
        <tag>MarkDownPad 2</tag>
        <tag>MarkDown</tag>
      </tags>
  </entry>
</search>
