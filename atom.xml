<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>测试极客</title>
  
  <subtitle>不忘初心 方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://igeeker.io/"/>
  <updated>2018-01-27T07:36:37.324Z</updated>
  <id>https://igeeker.io/</id>
  
  <author>
    <name>Cappuccino</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Gatling实时监控配置</title>
    <link href="https://igeeker.io/2018/01/27/Gatling%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%E9%85%8D%E7%BD%AE/"/>
    <id>https://igeeker.io/2018/01/27/Gatling实时监控配置/</id>
    <published>2018-01-27T07:36:37.327Z</published>
    <updated>2018-01-27T07:36:37.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>最近在研究Gatling，这是一款发布很久但在国内使用范围不是很广泛的压测工具。研究这款工具的理由很简单，很喜欢生成的html报告，本文会提供几张截图给大家一个直观感受，但这不是本文的重点，Gatling官网下载的版本不支持实时监控，只有在simulations结束后，打开html报告才能看到数据图表，这不符合我们边压测边看图表的习惯。</p><h1 id="实时监控"><a href="#实时监控" class="headerlink" title="实时监控"></a>实时监控</h1><p>官网说明文档中有关于实时监控章节的介绍，有兴趣的同学可以直接去官网看<a href="https://gatling.io/docs/current/realtime_monitoring/" target="_blank" rel="noopener">Realtime monitoring</a>，本文要介绍的部署方式：influxdb + grafana采用docker部署，更方便便捷。</p><blockquote><p>博主服务器环境为centos7，如为ubuntu、mac等环境，请自行研究，应该大致上差不多</p></blockquote><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><h3 id="安装镜像"><a href="#安装镜像" class="headerlink" title="安装镜像"></a>安装镜像</h3><p>在安装influxdb和grafana镜像前，先安装docker环境和docker-compose环境。Docker-Compose是一个部署多个容器的简单但是非常必要的工具</p><ul><li>docker安装<br><code>[root@host-10-200-143-10 local]# yum -y install docker</code></li></ul><ul><li>docker-compose安装</li></ul><p>安装Docker-Compose之前，请先安装 python-pip。</p><p>1、首先检查linux有没有安装python-pip包，终端执行 pip -V<br><code>[root@vm-50-151 network-scripts]# pip -V</code><br><code>-bash: pip: command not found</code></p><p>没有python-pip包就执行命令 yum -y install epel-release<br>    [root@vm-50-151 network-scripts]# yum -y install epel-release</p><p>3、执行成功之后，再次执行yum -y install python-pip</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@vm</span><span class="number">-50</span><span class="number">-151</span> network-scripts]<span class="meta"># yum install python-pip</span></span><br></pre></td></tr></table></figure><p>4、对安装好的pip进行升级 pip install –upgrade pip</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@vm</span><span class="number">-50</span><span class="number">-151</span> network-scripts]<span class="meta"># pip install --upgrade pip</span></span><br></pre></td></tr></table></figure><p>至此，pip安装好了，执行pip -V 再次检查pip环境。</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@host-<span class="number">10</span>-<span class="number">200</span>-<span class="number">143</span>-<span class="number">10</span> local]<span class="comment"># pip -V</span></span><br><span class="line">pip <span class="number">9.0</span>.<span class="number">1</span> from /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">python2</span>.7/<span class="title">site</span>-<span class="title">packages</span> (<span class="title">python</span> 2.7)</span></span><br></pre></td></tr></table></figure><p><strong>安装Docker-Compose</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@host<span class="number">-10</span><span class="number">-200</span><span class="number">-143</span><span class="number">-10</span> local]# pip install docker-compose</span><br></pre></td></tr></table></figure><p>检查docker-compose 安装：docker-compose -version</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@host<span class="number">-10</span><span class="number">-200</span><span class="number">-143</span><span class="number">-10</span> local]# docker-compose -version</span><br><span class="line">docker-compose version <span class="number">1.18</span><span class="number">.0</span>, build <span class="number">8</span>dd22a9</span><br></pre></td></tr></table></figure><ul><li>influxdb镜像</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull influxdb<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li>grafana镜像</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull grafana/grafana<span class="comment">;</span></span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>在服务器/usr/local目录下创建monitor目录，并在monitor下创建两个目录influxdb和grafana<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@host<span class="number">-10</span><span class="number">-200</span><span class="number">-143</span><span class="number">-10</span> local]# ls monitor</span><br><span class="line">grafana  influxdb</span><br></pre></td></tr></table></figure></p><p>在influxdb目录下新建docker-compose.yml文件，文件内容如下：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@host<span class="number">-10</span><span class="number">-200</span><span class="number">-143</span><span class="number">-10</span> influxdb]<span class="meta"># cat docker-compose.yml </span></span><br><span class="line"><span class="symbol">version:</span> <span class="string">"2"</span></span><br><span class="line"><span class="symbol">services:</span></span><br><span class="line"><span class="symbol">  influxdb:</span></span><br><span class="line"><span class="symbol">    image:</span> influxdb</span><br><span class="line"><span class="symbol">    ports:</span></span><br><span class="line">      - <span class="number">8086</span>:<span class="number">8086</span></span><br><span class="line">      - <span class="number">2003</span>:<span class="number">2003</span></span><br><span class="line"><span class="symbol">    environment:</span></span><br><span class="line">      - INFLUXDB_GRAPHITE_ENABLED=true</span><br></pre></td></tr></table></figure></p><p>8086端口为influxdb的监听端口，2003端口为gatling的监听端口</p><p>在grafana目录下新建docker-compose.yml文件，文件内容如下：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@host<span class="number">-10</span><span class="number">-200</span><span class="number">-143</span><span class="number">-10</span> grafana]<span class="meta"># cat docker-compose.yml </span></span><br><span class="line"><span class="symbol">version:</span> <span class="string">"2"</span></span><br><span class="line"><span class="symbol">services:</span></span><br><span class="line"><span class="symbol">  influxdb:</span></span><br><span class="line"><span class="symbol">    image:</span> grafana/grafana</span><br><span class="line"><span class="symbol">    ports:</span></span><br><span class="line">      - <span class="number">3000</span>:<span class="number">3000</span></span><br><span class="line"><span class="symbol">    environment:</span></span><br><span class="line">      - GF_SERVER_ROOT_UR=http:<span class="comment">//127.0.0.1</span></span><br><span class="line">      - GF_SECURITY_ADMIN_PASSWORD=passwd</span><br></pre></td></tr></table></figure></p><p>3000端口为grafana的监听端口</p><p>配置完influxdb和grafana后，我们再配置gatling内容，进入gatling的conf目录下，打开gatling.conf，按照实际情况修改如下内容：<br><img src="https://i.imgur.com/WqaYPWp.png" alt="gatling"></p><p>配置文件配置完成后，然后就是依次启动influxdb和grafana服务</p><h1 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h1><h3 id="influxdb启动"><a href="#influxdb启动" class="headerlink" title="influxdb启动"></a>influxdb启动</h3><p>进入/usr/local目录下，执行如下命令：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@host<span class="number">-10</span><span class="number">-200</span><span class="number">-143</span><span class="number">-10</span> local]# docker-compose -f monitor/influxdb/docker-compose.yml up -d</span><br></pre></td></tr></table></figure></p><p>检查influxdb启动结果,运行命令<figure class="highlight docker"><figcaption><span>ps```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">[root@host-<span class="number">10</span>-<span class="number">200</span>-<span class="number">143</span>-<span class="number">10</span> local]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">ffa5f8edeea6        influxdb            <span class="string">"/entrypoint.sh influ"</span>   <span class="number">2</span> hours ago         Up <span class="number">2</span> hours          <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">2003</span>-&gt;<span class="number">2003</span>/tcp, <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8086</span>-&gt;<span class="number">8086</span>/tcp   influxdb_influxdb_1</span><br></pre></td></tr></table></figure></p><p>进入influxdb容器，修改配置文件<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@host</span><span class="number">-10</span><span class="number">-200</span><span class="number">-143</span><span class="number">-10</span> <span class="keyword">local</span>]<span class="meta"># docker exec -it ffa5f8edeea6 bash</span></span><br><span class="line">root<span class="symbol">@ffa5f8edeea6</span>:/<span class="meta">#</span></span><br></pre></td></tr></table></figure></p><p>安装vim编辑器<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="builtin-name">get</span> update</span><br><span class="line">apt-<span class="builtin-name">get</span> install -y vim</span><br></pre></td></tr></table></figure></p><p>修改influxdb配置文件，添加如下内容:<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@ffa5f8edeea6:/<span class="comment"># vim /etc/influxdb/influxdb.conf </span></span><br><span class="line">[meta]</span><br><span class="line">  <span class="attr">dir</span> = <span class="string">"/var/lib/influxdb/meta"</span></span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">  <span class="attr">dir</span> = <span class="string">"/var/lib/influxdb/data"</span></span><br><span class="line">  <span class="attr">engine</span> = <span class="string">"tsm1"</span></span><br><span class="line">  <span class="attr">wal-dir</span> = <span class="string">"/var/lib/influxdb/wal"</span></span><br><span class="line"></span><br><span class="line">[[graphite]]</span><br><span class="line">  <span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line">  <span class="attr">database</span> = <span class="string">"gatlingdb"</span></span><br><span class="line">  <span class="attr">templates</span> = [</span><br><span class="line">                <span class="string">"gatling.*.*.*.* measurement.simulation.request.status.field"</span>,</span><br><span class="line">                <span class="string">"gatling.*.users.*.* measurement.simulation.measurement.request.field"</span></span><br><span class="line">        ]</span><br></pre></td></tr></table></figure></p><p>influxdb配置文件修改后，需要重启容器，操作步骤如下：<br>1、退出influxdb容器<br>2、进入到/usr/local/monitor/influxdb目录下，执行命令<figure class="highlight plain"><figcaption><span>restart```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### grafana启动</span><br><span class="line">进入/usr/local目录下，执行如下命令：</span><br></pre></td></tr></table></figure></p><p>[root@host-10-200-143-10 local]# docker-compose -f monitor/grafana/docker-compose.yml up -d<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section"># grafana管理后台操作</span></span><br><span class="line"></span><br><span class="line">启动成功后，访问http://10.200.143.10:3000即可打开grafana管理页面，进入登录页面：</span><br><span class="line">![<span class="string">login</span>](<span class="link">https://i.imgur.com/TTIA41z.png</span>)</span><br><span class="line"></span><br><span class="line">用户名默认为admin，密码为前面grafana目录下docker-compose.yml配置的密码，登录成功后看到的页面</span><br><span class="line">![<span class="string">grafana</span>](<span class="link">https://i.imgur.com/Mfd1NCe.png</span>)</span><br><span class="line"></span><br><span class="line">配置数据源Data Sources，如</span><br><span class="line">![<span class="string">data source</span>](<span class="link">https://i.imgur.com/5oILRN6.png</span>)</span><br><span class="line"></span><br><span class="line">配置完成后，点击保存，这里可能会遇到如下问题</span><br><span class="line">![<span class="string">error</span>](<span class="link">https://i.imgur.com/vXwFTPy.png</span>)</span><br><span class="line"></span><br><span class="line">解决方法：</span><br><span class="line">1、进入influxdb控制台</span><br></pre></td></tr></table></figure></p><p>[root@host-10-200-143-10 local]# influx<br>Connected to <a href="http://localhost:8086" target="_blank" rel="noopener">http://localhost:8086</a> version 1.4.2<br>InfluxDB shell version: 1.2.4<br>&gt;<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>、查看influxdb数据库</span><br></pre></td></tr></table></figure></p><blockquote><p>show databases;<br>name: databases</p><h2 id="name"><a href="#name" class="headerlink" title="name"></a>name</h2><p>_internal<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">确实没有gatlingdb数据库，但我们可能新建gatlingdb数据库</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、新建gatlingdb数据库</span><br></pre></td></tr></table></figure></p><p>create database gatlingdb;<br>show databases;<br>name: databases</p><h2 id="name-1"><a href="#name-1" class="headerlink" title="name"></a>name</h2><p>_internal<br>gatlingdb</p><p>```<br>说明gatlingdb数据库创建好了，然后就是导入实时监控模板，模板地址：<a href="https://github.com/gatling/gatling/blob/master/src/sphinx/realtime_monitoring/code/gatling.json" target="_blank" rel="noopener">https://github.com/gatling/gatling/blob/master/src/sphinx/realtime_monitoring/code/gatling.json</a></p></blockquote><p>将模板json import到监控面板即可<br><img src="https://i.imgur.com/IeIHL8y.png" alt="json"><br><img src="https://i.imgur.com/lrTMzq8.png" alt="json2"></p><p>终于弄好了，现在见证奇迹的时候到了，执行gatling的scala脚本，实时监控压测情况<br><img src="https://i.imgur.com/buXGnbQ.png" alt="case"></p><p>实时监控图表<br><img src="https://i.imgur.com/iUMRtqd.png" alt="monitor"></p><blockquote><p>参考资料：<br><a href="https://testerhome.com/topics/9380" target="_blank" rel="noopener">https://testerhome.com/topics/9380</a><br><a href="http://gatling.io/docs/current/realtime_monitoring/" target="_blank" rel="noopener">http://gatling.io/docs/current/realtime_monitoring/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;最近在研究Gatling，这是一款发布很久但在国内使用范围不是很广泛的压测工具。研究这款工具的理由很简单，很喜欢生成的html报告，本文会提
      
    
    </summary>
    
      <category term="性能测试" scheme="https://igeeker.io/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Gatling" scheme="https://igeeker.io/tags/Gatling/"/>
    
      <category term="influxdb" scheme="https://igeeker.io/tags/influxdb/"/>
    
      <category term="grafana" scheme="https://igeeker.io/tags/grafana/"/>
    
  </entry>
  
  <entry>
    <title>每周美图(二)</title>
    <link href="https://igeeker.io/2018/01/21/%E6%AF%8F%E5%91%A8%E7%BE%8E%E5%9B%BE%E4%BA%8C/"/>
    <id>https://igeeker.io/2018/01/21/每周美图二/</id>
    <published>2018-01-21T06:56:11.063Z</published>
    <updated>2018-01-21T06:55:20.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="美图" scheme="https://igeeker.io/categories/%E7%BE%8E%E5%9B%BE/"/>
    
    
      <category term="风景" scheme="https://igeeker.io/tags/%E9%A3%8E%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>2018年工作学习计划</title>
    <link href="https://igeeker.io/2018/01/21/2018%E5%B9%B4%E5%B7%A5%E4%BD%9C%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <id>https://igeeker.io/2018/01/21/2018年工作学习计划/</id>
    <published>2018-01-21T06:44:36.147Z</published>
    <updated>2018-01-21T06:44:05.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>给自己定的2018年工作学习计划还是有较大难度的，给自己打气，全力以赴的完成！！！</strong></p></blockquote><p><img src="https://i.imgur.com/KGGYGct.png" alt="2018"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;给自己定的2018年工作学习计划还是有较大难度的，给自己打气，全力以赴的完成！！！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/KGGYGct.png&quot; a
      
    
    </summary>
    
      <category term="测试人生" scheme="https://igeeker.io/categories/%E6%B5%8B%E8%AF%95%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="测试感悟" scheme="https://igeeker.io/tags/%E6%B5%8B%E8%AF%95%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>2017年回顾</title>
    <link href="https://igeeker.io/2018/01/11/2017%E5%B9%B4%E5%9B%9E%E9%A1%BE/"/>
    <id>https://igeeker.io/2018/01/11/2017年回顾/</id>
    <published>2018-01-11T09:20:30.139Z</published>
    <updated>2018-01-11T09:19:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　2017年一晃眼就过去了，未来得及感叹时光如梭，2018年迫不及待的来了。</p><p>　　回忆过去，总结过去，规划未来，你的人生才会越来越精彩。趁着2017年预热还未完全散去，将脑海中的记忆碎片进行整理，不敢奢望跟电影一样播放2017年经历的种种，能想起多少算多少~~~</p><p>　　如果要给自己2017年打分的话，我觉得差不多及格吧，60分刚刚好。为什么会给自己这样的分数，我认为，这一年下来，有些事情自己做的还比较满意，有些事情做的不尽如意，也有些事情感觉有些遗憾，如果时光倒流一定会做的尽量完美，当然，这是一种废话。</p><p>　　我个人比较喜欢先说认为比较好的事情，再说认为不好的事情。</p><h3>一、感觉不错的事情</h3><h4>IApiTests框架开发及维护</h4><p>　　这是一个接口自动化测试框架，仅支持<code>http/https</code>协议的接口，如现在市面上主流的<code>restful</code>接口。有人要吐槽说，这样的框架在行业内烂大街，有什么好拿出来来说，用到的技术都差不多。这点我认同，确实没啥技术含量，只是自我感觉良好而已。不求得到业界的认可，只要我们公司能用起来，发挥了这个框架的作用，我就知足了。后续我会在我的博客发布关于<strong>IApiTests</strong>框架一系列的文章，有兴趣的朋友可以一起交流学习，欢迎大家留言。</p><h4>测试工具平台开发及维护</h4><p> 　　XXXX平台，取这样的名字有点唬人，我高兴啊，乐意取这样的名字。目前这个平台提供的功能还比较少，包括MD5和DES3加解密、时间戳转换等，让我们的测试人员能够很方便的使用这个平台进行接口测试工作，而不需要依赖开发帮助。平台采用前后端分类架构，服务端采用<code>spring boot</code>开发框架，前端采用<code>vue.js+ElementUI</code>开发框架，非常的简单清爽。目前在开发中的功能有各种缺陷分析的图表，如缺陷收敛图、发现缺陷难易程度等，博主公司使用禅道管理缺陷，禅道没有这些图表，而这几个图表我认为是非常重要的，是衡量项目/版本质量好坏的很有利的证据。图表的功能实现，会采用百度的echarts图表库；采集的数据会储存在数据库中，使用<code>spring data jpa</code>框架。</p><h4>成功推荐前公司CTO到现在公司</h4><p>　　有人说，靠，这有啥好说的，其实不然，中间的过程还是挺曲折的，最终是双赢的，公司吸引了一位高端人才，CTO也找到了自己的舞台，发挥了自己的价值。</p><h4>团队组建</h4><p>　　这是最值得自豪的事情了，至少我司很多人忒羡慕我，哈哈，为啥羡慕？ 有的人很有慧根，一下子就猜到了，美女成群呗。就这么说吧，我的团队男女比例接近2:8，而且都是高颜值的。每天一波一波的闷骚程序猿往这边凑，送吃的，送喝的，各种“巴结”我，还挺烦人的，哈哈哈。</p><p>　　我们团队目前十五六人，大多数人都是下半年慢慢招进来的。团队规模不断的壮大，支撑的项目也越来越多，很多问题都暴露出来了，比如大家坐的很分散，跟着项目组，大家吐槽彼此不熟悉，没有团队归属感；人员水平参差不齐，整体水平不高，流程不规范，测试进度把控不好，效率低下。作为Leader，那段时间我脑子里面一直在思考这些问题，挺困扰的。为了改变这些现状，放了不少血，请吃饭，发红包，唱歌，射箭攀岩，跟人事协调，安排大家集中坐在一起，有些项目组还不是很配合，说什么不跟项目组坐在一起沟通不方便效率低下，我的态度还是坚决的，这是我们团队所有人员的期盼，我要顺应民心，而且不是很认同他们的观点，事实上经过几个月的观察，各项目组的沟通并未有啥影响。<br>　　<br>　　这个问题很好的解决了，但每个个体的差异性问题，非常棘手，而且不是一朝一夕能改善的。没办法，十八般武艺，都得耍出来，制定流程规范，制定培训分享计划，挑典范项目，跟产品、开发撕逼，凡是对的事情都在坚持做，慢慢的，和前几个月对比，明显感受到大家的变化，团队的变化，都在朝着我期望的方向进行，这点让我很欣慰也很感动。</p><p>　　和技术相比，管理团队真的更难，如何让大家能听你的，而且是开心主动的去做一些你安排的工作内容，真的要很花心思。这个过程只有自己经历了，才能真正体会到其中的苦与甜。每个管理者都会有一套自己的管理方式，我自己总结最核心的三大要素就是：人、流程、技术。真诚待人，不要体现分明的上下级关系，大家只是分工不同而已；灵活高效的流程规范，既可以确保关键节点的产出，又不引起大家的排斥反感情绪；至于技术，不需要解释吧，大家都懂的。</p><p>上面这些，是自认为做的还可以之处，但还是有很多地方有不足和遗憾，希望在2018年能改进和优化。</p><h3>二、不足和遗憾</h3><h4>阅读量太少，阅读面太窄</h4><p>　　2017年虽然买了快20本书，但只看了不到5本，还有的书籍看了一点点就没有坚持下去。还是觉得自己这方面缺乏一些坚持，虽然2017年事情很多，这不应该成为看不完的借口，买的书还是应该花时间看完。现在很多人都多了分浮躁，少了分坚持，想走各种捷径，幻想着一朝一夕就能获取很多知识，而不能静下来好好的把自己想获取的知识通过阅读书籍来实现，最终你学到的只不过是一些皮毛，根本经不起现实的考验。</p><p>除了阅读量太少，阅读面也不够广，买的书大多数都是技术书籍，想想，到了中立之年了，需要去接触和获取一些其他方面的知识了，如管理、金融等领域。这个年纪了，不得不服老，还真学不过那些90后，我们的目标是管理好这些90后，发挥他们的价值，给公司创造更高的价值。</p><h4>掌握的知识深度不够</h4><ul><li>代码写的太少，编程能力深度不够；</li></ul><ul><li>框架设计层面没有考虑设计模式，功能新增修改太费劲，扩展性太差；</li></ul><ul><li>性能测试涉及的层面很多都了解肤浅，比如监控命令采集数据的来源，操作系统原理，linux内核信息等，JVM只知道简单的参数、内存管理，更深入的JVM原理没有深入研究，等等；</li></ul><ul><li>数据库方面，也做了一些SQL调优方面的实践，而且性能提升最高的达到1000倍，但数据库的配置优化方面还很欠缺，对数据库底层原理了解太少，虽然我们测试人员不需要像DBA那样精通数据库，如果你是测试领域的专家，你应该是那个团队中的大神，甚至得到众多开发的高度认可；</li></ul><p>虽然知识面广度还可能，但越发觉得自己的无知了，知其然，但不知其所以然，希望2018年能在某几个领域深入下去</p><h4>家庭照顾不周</h4><p>　　团队规模越来越大，支撑的项目越来越多，需要沟通协调的事情越来越多，加班也越来越多。时间是恒定的，自然在家庭方面投入的时间就少了，2017年，我成为了一个准爸爸，特别开心。老婆怀孕更需要好好照顾，想法子弄各种好吃的，由于父母身体不好，没有在这边待着，家里只有我可以照顾老婆和肚子里的宝宝，工作日加班多，不能在家做饭，只能周末两天好好弄些好吃的好喝的。这样的局面可能还需要维持一段时间，培养了几个小组长，慢慢可能承担更多的任务了，有一些事情交给他们处理就可以了。</p><p>　　写了挺多的了，2017年的总结差不多了，几年之后，当自己看到这篇博客的时候，不知道会是怎样的状态？</p><p>　　概况下2017年，在团队管理方面倾注了更多的心血，看到团队的氛围很融洽，算是对我的付出的一种认可吧；知识沉淀方面还是有些浮躁和不够执着，学习知识深入还不够；工作固然重要，也重不过家庭和身体，最好是能在这三者之间找到最好的平衡点。</p><p>　　2017年已成过去，不管如何，调整好自己，2018年做更好的自己。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　2017年一晃眼就过去了，未来得及感叹时光如梭，2018年迫不及待的来了。&lt;/p&gt;
&lt;p&gt;　　回忆过去，总结过去，规划未来，你的人生才会越来越精彩。趁着2017年预热还未完全散去，将脑海中的记忆碎片进行整理，不敢奢望跟电影一样播放2017年经历的种种，能想起多少算多少~
      
    
    </summary>
    
      <category term="测试人生" scheme="https://igeeker.io/categories/%E6%B5%8B%E8%AF%95%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="测试感悟" scheme="https://igeeker.io/tags/%E6%B5%8B%E8%AF%95%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>你给公司创造了多少价值</title>
    <link href="https://igeeker.io/2018/01/09/%E4%BD%A0%E7%BB%99%E5%85%AC%E5%8F%B8%E5%88%9B%E9%80%A0%E4%BA%86%E5%A4%9A%E5%B0%91%E4%BB%B7%E5%80%BC/"/>
    <id>https://igeeker.io/2018/01/09/你给公司创造了多少价值/</id>
    <published>2018-01-09T12:35:34.693Z</published>
    <updated>2018-01-09T12:34:58.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Tips: 这是博主几年前写的，记录当时自己的一些感想</p></blockquote><p>　　公司每年有两次晋升机会，年中年末。</p><p>　　这次，我向leader申请晋升机会，今天leader叫我去会议室聊聊。</p><p>　　开始问我你觉得你给团队带来了哪些帮助？ 有没有因为你提高了整个团队的效率？</p><p>　　我完成了几个项目的主流程自动化的覆盖，达到了持续集成的目的。我写过一个工具，用来同步hudson的配置数据，保持应用服务器的配置和hudson服务器的配置一致，节省了因为配置不一致进行问题排查所花费的时间，提高了整个团队的工作效率。</p><p>　　还问了一些其他的问题，就不一一叙述了。</p><p>　　最后，leader问我，你觉得你给公司创造了多少价值，给公司的未来创造了多少价值？</p><p>　　这个问题把我问倒了，我不知道怎么回答，不知道从哪些方面来回答，只觉得这个问题好抽象，我笑笑说，这个我还真没认真想过，说不出具体的点点面面来。</p><p>　　leader说，这个你好好想想，我不会告诉你答案，这个问题还没有答案。不过公司的晋升评审时，评委们都是以这个问题为导线而展开的。</p><p>　　有人肯定会说，只要你在这个公司做，只要公司在盈利，你创造的价值肯定大于你所获得的价值。</p><p>　　但是，有没有一个大概的值呢？怎样去估算这个值呢？可以从哪些方面来一点一点的细化你所创造的价值呢？</p><p>　　大家一起去思考吧，也希望大家可以一起交流、学习。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Tips: 这是博主几年前写的，记录当时自己的一些感想&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　公司每年有两次晋升机会，年中年末。&lt;/p&gt;
&lt;p&gt;　　这次，我向leader申请晋升机会，今天leader叫我去会议室聊聊。&lt;/p&gt;
&lt;p&gt;　　开
      
    
    </summary>
    
      <category term="测试人生" scheme="https://igeeker.io/categories/%E6%B5%8B%E8%AF%95%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="测试感悟" scheme="https://igeeker.io/tags/%E6%B5%8B%E8%AF%95%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>如何看待开发的随意变更模块功能</title>
    <link href="https://igeeker.io/2018/01/08/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E5%BC%80%E5%8F%91%E7%9A%84%E9%9A%8F%E6%84%8F%E5%8F%98%E6%9B%B4%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD/"/>
    <id>https://igeeker.io/2018/01/08/如何看待开发的随意变更模块功能/</id>
    <published>2018-01-08T13:03:28.795Z</published>
    <updated>2018-01-08T13:03:28.793Z</updated>
    
    <content type="html"><![CDATA[<p>　　这几天也有在51testing上浏览一些文章，关于开发和测试之间的关系的文章，非常的多。</p><p>　　大部分比例的观点都会描述开发和测试之间存在居多的问题，比如开发认为测试爱找茬，喜欢钻牛角尖，测试认为开发不懂测试，质量意识不强，等等。</p><p>　　今天，在工作中，我经历了一件事情。项目即将发布了，开发对一个模块某个功能的实现换了别的逻辑，而这个变动作为这个项目的测试负责人的我是透明的，我不知道开发改变了这个逻辑。但幸好在项目冒烟测试阶段，我就编写了所有模块的主流程的自动化脚本，并进行每天的回归测试。在今天发现部分脚本执行失败，排查原因发现变更了逻辑的地方脚本报错了，于是和开发确认后，是变更逻辑所致。</p><p>　　后来我又排查了另外几个失败的脚本，发现又有一个文本输入限制的逻辑也变更了。</p><p>　　对于这种情况，我觉得对于开发来说，功能的变更太随便了，在他们的意识里没有完整的质量意识，认为自己变更的只是一个小功能，没有必要知会测试。但是，往往是开发的这种习惯，最后却导致线上的故障。</p><p>　　对于开发的这种习惯，也有几个相应的措施来监控，一个就是监控他们每次提交的代码，二个就是通过自动化脚本进行持续集成，不断的校验系统各模块的功能。当然，也幸好有后者，让我发现了这个问题的所在。</p><p>　　在这里，虽然问题在发布前被发现，但我们想想，如果我们没有这个条件，在已经测试好几轮后，开发又偷偷改动了其他的功能，悲剧迟早会发生的。</p><p>　　思考再三，我觉得自己还是唱个黑脸，在项目交流群里，把这几个问题抛出来，并表明我的观点：在即将发布前，开发随意的变更功能，不知会测试，这样的项目质量让测试如何有信心来保证。</p><p>　　开发也抛出了自己的观点，说这都是一些小的功能，没有必要事事都告知测试吧，觉得我是在钻牛角尖。但我觉得，这不单单仅仅是功能大小的问题，而是一种意识，一种习惯。即使我也觉得这几个小变更确实不会对系统造成大的影响，但是，我很害怕开发的这种习惯，或许哪天，因为这种情况，人算不如天算，在发布后因为小功能导致重大问题，这种情况不是没可能，我情愿做个悲观者。</p><p>　　对于开发来说，测试有责任去杜绝开发的这种习惯，去培养他们良好的质量意识，现在很流行的缺陷预防，我想，如果开发也有良好的质量意识，未尝不是在进行有效的缺陷预防。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　这几天也有在51testing上浏览一些文章，关于开发和测试之间的关系的文章，非常的多。&lt;/p&gt;
&lt;p&gt;　　大部分比例的观点都会描述开发和测试之间存在居多的问题，比如开发认为测试爱找茬，喜欢钻牛角尖，测试认为开发不懂测试，质量意识不强，等等。&lt;/p&gt;
&lt;p&gt;　　今天，在
      
    
    </summary>
    
      <category term="测试人生" scheme="https://igeeker.io/categories/%E6%B5%8B%E8%AF%95%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="测试感悟" scheme="https://igeeker.io/tags/%E6%B5%8B%E8%AF%95%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>每周美图(一)</title>
    <link href="https://igeeker.io/2018/01/07/%E6%AF%8F%E5%91%A8%E7%BE%8E%E5%9B%BE%E4%B8%80/"/>
    <id>https://igeeker.io/2018/01/07/每周美图一/</id>
    <published>2018-01-07T09:33:44.000Z</published>
    <updated>2018-01-07T14:42:04.132Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="美图" scheme="https://igeeker.io/categories/%E7%BE%8E%E5%9B%BE/"/>
    
    
      <category term="欧美" scheme="https://igeeker.io/tags/%E6%AC%A7%E7%BE%8E/"/>
    
  </entry>
  
  <entry>
    <title>MarkDownPad 2实用教程</title>
    <link href="https://igeeker.io/2018/01/06/MarkDownPad%202%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://igeeker.io/2018/01/06/MarkDownPad 2实用教程/</id>
    <published>2018-01-06T11:39:28.207Z</published>
    <updated>2018-01-06T11:39:28.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MarkDownPad-2实用教程"><a href="#MarkDownPad-2实用教程" class="headerlink" title="MarkDownPad 2实用教程"></a>MarkDownPad 2实用教程</h1><p><br></p><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><blockquote><p>　　MarkdownPad 是一款免费的将文本转换成HTML/XHTML的网页格式的小软件，操作简单容易，上手很快，可让你可以即时预览转换后的样式的同时，又不会加入Office特有的编版码，有需要朋友可以进行尝试。</p></blockquote><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>　　<em>网上关于MarkDownPad2的资料既少又零散，笔者在踩了很多坑之后，决定写一篇完善的文章，将大多数新手可能需要的信息整理到一起，少走弯路。</em></p><p>本文共分几个部分来进行展开：</p><blockquote><ul><li>下载安装</li><li>中文汉化、破解</li><li>语法介绍</li><li>高级玩法</li></ul></blockquote><h1 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1. 下载安装"></a>1. 下载安装</h1><h3 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h3><blockquote><p>Tips：MarkDownPad2是一款国外收费软件，有钱任性的可以buy</p></blockquote><p>　　官网地址<a href="http://markdownpad.com/" target="_blank" rel="noopener">MarkDownPad2</a>，可以取官网了解下MarkDownPad2一些介绍之类，我们就不在这绕弯子了，直接进入主题：选择下载安装破解版，并进行汉化。<br>　　<br>　　笔者是在这里下载的：<a href="http://www.pc6.com/softview/SoftView_73153.html" target="_blank" rel="noopener">http://www.pc6.com/softview/SoftView_73153.html</a>　如不能破解，请联系我获取～</p><h3 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h3><p>　　跟安装其他Windows软件一样，不具体介绍了</p><h3 id="1-3-中文汉化"><a href="#1-3-中文汉化" class="headerlink" title="1.3 中文汉化"></a>1.3 中文汉化</h3><p>　　</p><ol><li><p>打开软件，点击Tools<br>　<img src="https://i.imgur.com/fQHgMbY.png" alt="Tools"></p></li><li><p>点击Options<br>　<img src="https://i.imgur.com/aGX63Gg.png" alt="options"></p></li><li><p>修改语言为中文并重启应用程序即可<br>　<br>　<img src="https://i.imgur.com/V5aUYMU.png" alt="Languages"></p></li></ol><h3 id="1-4-破解"><a href="#1-4-破解" class="headerlink" title="1.4 破解"></a>1.4 破解</h3><ol><li><p>解压下载下来的包，然后解压Pa_ttrar.rar这个包<br>　<br>　<img src="https://i.imgur.com/7xshQ0N.png" alt="pojie"></p></li><li><p>运行包中的Pa_ttrar.exe文件<br>　<br>　<img src="https://i.imgur.com/hcLnQUp.png" alt="pojie"></p></li><li><p>点击path,然后点击是<br>　<br>　<img src="https://i.imgur.com/FVQ5HYa.png" alt="pojie"></p></li><li><p>选择这个包软件的程序包中的MarkdownPad2.exe.config文件<br>　<br>　<img src="https://i.imgur.com/mrz6dFT.png" alt="pojie"></p></li><li><p>点击打开，运行后关闭程序<br>　<br>　<img src="https://i.imgur.com/IeHJxmr.png" alt="pojie"></p></li><li><p>这样就可以了，现在你打开程序就可以看到的就是中文破解版的了<br>　<img src="https://i.imgur.com/bGmmnna.png" alt="pojie"></p></li></ol><h1 id="2-语法介绍"><a href="#2-语法介绍" class="headerlink" title="2. 语法介绍"></a>2. 语法介绍</h1><p>　　有了上面的配置，我们就可以开始markdown之旅了，但是没有语法，就没有漂亮的排版。 </p><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><pre># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</pre><h3 id="2-2-列表"><a href="#2-2-列表" class="headerlink" title="2.2 列表"></a>2.2 列表</h3><p><strong>A.无序列表</strong></p><blockquote><p>语法很简单，在文字前加上 - 或 * 即可。</p></blockquote><pre>- 我是第一行- 我是第二行* 我是第三行* 我是第四行</pre><blockquote><p><strong>Tips：</strong>- * 等符号要和文字之间加上一个字符的空格！</p></blockquote><p><br></p><p><strong>B.有序列表</strong></p><blockquote><p>直接在文字前加1. 2. 3. 符号<br>1.我是第一行<br>2.我是第二行<br>3.我是第三行</p></blockquote><h3 id="2-3-引用"><a href="#2-3-引用" class="headerlink" title="2.3 引用"></a>2.3 引用</h3><blockquote><p>需要在文本前加入 &gt; 这种尖括号（大于号）即可</p></blockquote><pre>> 我一直在使用引用。> 从开始到现在。</pre><blockquote><p><strong>Tips：</strong> &gt;符号要和文字之间加上一个字符的空格！而且是在英文输入法的条件下输入！</p></blockquote><h3 id="2-4-图片和链接"><a href="#2-4-图片和链接" class="headerlink" title="2.4 图片和链接"></a>2.4 图片和链接</h3><blockquote><p>图片与链接</p><p>插入链接与插入图片的语法很像，<strong>区别在一个 !号</strong></p></blockquote><pre>图片为：![]() 举例：![美女矢量素材](https://i.imgur.com/lPKrI8e.png)链接为：[]()  举例：[美女矢量素材](https://i.imgur.com/lPKrI8e.png)</pre><p><strong>图片举例：</strong><br><img src="https://i.imgur.com/lPKrI8e.png" alt="美女矢量素材"></p><p>链接举例：<a href="https://i.imgur.com/lPKrI8e.png" target="_blank" rel="noopener">美女矢量素材</a></p><h3 id="2-5-粗体与斜体"><a href="#2-5-粗体与斜体" class="headerlink" title="2.5 粗体与斜体"></a>2.5 粗体与斜体</h3><blockquote><p>Markdown 的粗体和斜体也非常简单，用两个 <em> 包含一段文本就是粗体的语法，用一个 </em> 包含一段文本就是斜体的语法。</p><p>例如：<br>这里是<strong>粗体</strong> 这里是<em>斜体</em></p></blockquote><pre>粗体  举例：**粗体**斜体  举例：*斜体*</pre><h3 id="2-6-表格"><a href="#2-6-表格" class="headerlink" title="2.6 表格"></a>2.6 表格</h3><blockquote><p><strong>说明：</strong><br>|表头1|表头2|表头3|<br>|:—-|:—-:|—-:|<br>|居左|居中|居右|</p></blockquote><p>举例：</p><pre>| Tables        | Are           | Cool  || ------------- |:-------------:| -----:|| col 3 is      | right-aligned | $1600 || col 2 is      | centered      |   $12 || zebra stripes | are neat      |    $1 |</pre><p>效果如下：</p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><p>示例表格转换成html代码就是这样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Tables<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>Are<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>Cool<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>col 3 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>right-aligned<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>$1600<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>col 2 is<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>centered<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>$12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>zebra stripes<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>are neat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>$1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="2-7-代码框"><a href="#2-7-代码框" class="headerlink" title="2.7 代码框"></a>2.7 代码框</h3><blockquote><p>连续三个反引号`，就是按键1前面的那个符号再加代码类型.</p></blockquote><pre><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hkteam.hk.ui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hkteam.hk.<span class="type">R</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">AboutHkActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">       <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">       setContentView(<span class="type">R</span>.layout.activity_about_hk);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></pre><p>效果如下：</p><pre><code>package com.hkteam.hk.ui;import com.hkteam.hk.R;import android.os.Bundle;public class AboutHkActivity extends BaseActivity{    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_about_hk);    }}</code></pre><h3 id="2-8-横线"><a href="#2-8-横线" class="headerlink" title="2.8 横线"></a>2.8 横线</h3><blockquote><p>分割线的语法只需要三个 * 号。</p></blockquote><h3 id="2-9-转义字符"><a href="#2-9-转义字符" class="headerlink" title="2.9 转义字符"></a>2.9 转义字符</h3><pre>\\ 反斜杠 \` 反引号 \* 星号 \_ 下划线 \{} 大括号 \[] 中括号 \() 小括号 \# 井号 \+ 加号 \- 减号 \. 英文句号 \! 感叹号</pre><p>效果如下：</p><blockquote><p>\ 反斜杠<br>` 反引号<br>* 星号<br>_ 下划线<br>{} 大括号<br>[] 中括号<br>() 小括号<br># 井号<br>+ 加号<br>- 减号<br>. 英文句号<br>! 感叹号</p></blockquote><h3 id="2-10-快捷键"><a href="#2-10-快捷键" class="headerlink" title="2.10 快捷键"></a>2.10 快捷键</h3><p><strong>MarkdownPad 2 常用快捷键</strong></p><pre>Ctrl + I ： 斜体Ctrl + B ： 粗体Ctrl + G ： 图片Ctrl + Q ： 引用Ctrl + 1 ： 标题 1Ctrl + 2 ： 标题 2Ctrl + 3 ： 标题 3Ctrl + K ： 代码块Ctrl + L ： 超链接Ctrl + T ： 时间戳Ctrl + U ： 无序列表Ctrl + R ： 水平标尺F4 ： 启用水平布局F5 ： 启用实时预览F6 ： 在浏览器中预览Ctrl + Shift + O ： 有序列表</pre><p>　　<br>MarkDownPad 2的语法介绍完了，我们可以记住这些语法的使用方法。对于新手来说，多多练习就能完全掌握，也可以鼠标点击工具栏上的图标来帮助你完成写作；对于高手来说，键盘操作才是黑科技，那么记住这些快捷键是基本功。</p><h1 id="3-高级玩法"><a href="#3-高级玩法" class="headerlink" title="3. 高级玩法"></a>3. 高级玩法</h1><h3 id="3-1-代码高亮"><a href="#3-1-代码高亮" class="headerlink" title="3.1 代码高亮"></a>3.1 代码高亮</h3><p>MarkDownPad 2 默认不会对代码块进行着色，要达到酷炫的代码高亮的效果，需要进行一些配置。</p><blockquote><p>进入markdownpad2》高级》工具》选项》高级》HTMLHead编辑器<br>将如下代码粘贴进去</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/highlight.js/8.0/styles/solarized_dark.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/highlight.js/8.0/highlight.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">hljs.initHighlightingOnLoad();</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>在编辑器中敲击代码在按F6在浏览器中打开，可看到代码高亮了</p><h3 id="3-2-自定义样式表"><a href="#3-2-自定义样式表" class="headerlink" title="3.2 自定义样式表"></a>3.2 自定义样式表</h3><p>MarkDownPad 2内置的样式表有：markdown.css  、none.css 、markdownpad-github.css、solarized-dark.css 、solarized-light.css</p><p>选择“工具——选项——样式表”可以看到样式表的设置界面 或“按F7——样式表”，如下图<br>　<br><img src="https://i.imgur.com/GXPCLFS.png" alt="样式表"></p><p>上面列出的5种样式表，你都可以对它们进行编辑，修改为你想要的样式<br>也可以自定义添加样式表</p><blockquote><p>Tips：要修改样式表或自定义添加样式表，前提条件：学过html、css，具备修改css的能力</p></blockquote><h3 id="3-3-快速高效的写出漂亮的API接口文档"><a href="#3-3-快速高效的写出漂亮的API接口文档" class="headerlink" title="3.3 快速高效的写出漂亮的API接口文档"></a>3.3 快速高效的写出漂亮的API接口文档</h3><blockquote><p><strong>希望达到以下效果：</strong></p></blockquote><p><img src="https://i.imgur.com/YWtyKvN.png" alt="样式表"></p><p>例子完整内容<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">## 得到博客文章的列表（有分页） ##</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">### 接口地址 ###</span></span><br><span class="line"><span class="params">&lt;pre&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="symbol">http:</span><span class="comment">//www.dodobook.net/post/list</span></span><br><span class="line"> </span><br><span class="line"><span class="params">&lt;/pre&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">### 传递参数 ###</span></span><br><span class="line"><span class="params">&lt;pre&gt;</span></span><br><span class="line">cate_id         分类ID Array（不传显示全部）  [<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>]</span><br><span class="line">page_num        当前页码（可不传）   默认 <span class="number">1</span></span><br><span class="line">page_size       每页记录数目（可不填） 默认 <span class="number">10</span></span><br><span class="line"><span class="params">&lt;/pre&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">### 返回值 ###</span></span><br><span class="line"><span class="params">&lt;pre style="background:#<span class="number">222</span>;color:#<span class="number">35</span>b558"&gt;</span></span><br><span class="line"><span class="symbol">total:</span> <span class="number">108</span>,</span><br><span class="line"><span class="symbol">list:</span> [</span><br><span class="line">    &#123;</span><br><span class="line"><span class="symbol">        id:</span> <span class="number">2718</span>,</span><br><span class="line"><span class="symbol">        cate_id:</span> <span class="number">2</span>,</span><br><span class="line"><span class="symbol">        cate_name:</span> <span class="string">"php"</span>,</span><br><span class="line"><span class="symbol">        view_cnt:</span> <span class="string">"1005"</span>,</span><br><span class="line"><span class="symbol">        cate_name:</span> <span class="string">"php"</span>,</span><br><span class="line"><span class="symbol">        name:</span> <span class="string">"Yii2中配置使用连接多个数据库连接"</span>,</span><br><span class="line"><span class="symbol">        url:</span> <span class="string">"http://www.dodobook.net/php/2718"</span>,</span><br><span class="line"><span class="symbol">        post_date:</span> <span class="string">"2016-08-20 20:10:08"</span>,</span><br><span class="line"><span class="symbol">        img_logo:</span> <span class="string">"/upload/img/aaa.png"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line"><span class="symbol">        id:</span> <span class="number">2718</span>,</span><br><span class="line"><span class="symbol">        cate_id:</span> <span class="number">2</span>,</span><br><span class="line"><span class="symbol">        cate_name:</span> <span class="string">"php"</span>,</span><br><span class="line"><span class="symbol">        view_cnt:</span> <span class="string">"1005"</span>,</span><br><span class="line"><span class="symbol">        cate_name:</span> <span class="string">"php"</span>,</span><br><span class="line"><span class="symbol">        name:</span> <span class="string">"PHP实现网址短链接转换的方法"</span>,</span><br><span class="line"><span class="symbol">        url:</span> <span class="string">"http://www.dodobook.net/php/2710"</span>,</span><br><span class="line"><span class="symbol">        post_date:</span> <span class="string">"2016-08-16 20:10:08"</span>,</span><br><span class="line"><span class="symbol">        img_logo:</span> <span class="string">"/upload/img/addsaafff.png"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="params">&lt;/pre&gt;</span></span><br></pre></td></tr></table></figure></p><p>高级玩法还有很多，更多的功能等待着大家去摸索去发现……</p><h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h1><p>支持MarkDown语法写作的工具很多，还有很多支持在线编辑MarkDown语法的网站，选择一款适合自己的工具即可，好用高效才是王道!!!!!! </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MarkDownPad-2实用教程&quot;&gt;&lt;a href=&quot;#MarkDownPad-2实用教程&quot; class=&quot;headerlink&quot; title=&quot;MarkDownPad 2实用教程&quot;&gt;&lt;/a&gt;MarkDownPad 2实用教程&lt;/h1&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="写作" scheme="https://igeeker.io/categories/%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="MarkDownPad 2" scheme="https://igeeker.io/tags/MarkDownPad-2/"/>
    
      <category term="MarkDown" scheme="https://igeeker.io/tags/MarkDown/"/>
    
  </entry>
  
</feed>
